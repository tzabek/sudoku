$grid-size: 9;

.page-content {
  #board {
    padding: 7px;
    background: black;
    display: grid;
    grid-template-rows: repeat($grid-size, auto);
    grid-template-columns: repeat($grid-size, auto);
    column-gap: 2px;
    row-gap: 2px;
  }

  .candidates-wrapper {
    background-color: #f0f0f0;

    &.candidates {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);
      text-align: center;
      padding: 2px;

      .note {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.6rem;
        transition: all 0.3s ease, color 0.3s ease;

        &:not(.visible) {
          visibility: hidden;
        }

        &.visible {
          color: #fff;
          font-weight: bold;

          &:hover {
            cursor: pointer;
          }
        }
      }
    }
  }

  .cell-wrapper {
    width: 50px;
    height: 50px;
    background: white;
    display: grid;
    justify-items: center;
    align-items: center;

    &:nth-child(3n):not(:nth-child(9n)) {
      margin-right: 3px;
    }

    &:nth-child(27n + 28),
    &:nth-child(27n + 29),
    &:nth-child(27n + 30),
    &:nth-child(27n + 31),
    &:nth-child(27n + 32),
    &:nth-child(27n + 33),
    &:nth-child(27n + 34),
    &:nth-child(27n + 35),
    &:nth-child(27n + 36) {
      margin-top: 3px;
    }

    > input {
      width: 100%;
      height: 100%;
      border: none;
      outline: none;
      text-align: center;
      background: transparent;
      transition: background 0.3s ease, color 0.3s ease;

      &[readonly] {
        cursor: not-allowed;
        user-select: none;
      }
    }

    &:hover {
      background: rgb(214, 233, 240);

      > input {
        font-weight: bold;
        color: #222;
        text-shadow: 0 1px 0 rgba(255, 255, 255, 0.9);
        transition: all 0.3s ease, color 0.3s ease;
      }
    }

    &.prefilled {
      background: #f0f0f0;
    }

    &.solved {
      background: #c8e6c9;
    }

    &.prefilled,
    &.solved {
      > input {
        font-weight: bold;
        color: #222;
        text-shadow: 0 1px 0 rgba(255, 255, 255, 0.9);
        transition: all 0.3s ease, color 0.3s ease;
      }
    }
  }
}

@for $x from 0 through ($grid-size - 1) {
  @for $y from 0 through ($grid-size - 1) {
    .sudoku-board:has(
        .cell-wrapper[data-x='#{$x}'][data-y='#{$y}']:not(
            .prefilled
          ):focus-within
      ) {
      .cell-wrapper[data-x='#{$x}'],
      .cell-wrapper[data-y='#{$y}'] {
        background: rgb(214, 233, 240);
        transition: background 0.3s ease, color 0.3s ease;

        > input {
          font-weight: bold;
          color: #222;
          text-shadow: 0 1px 0 rgba(255, 255, 255, 0.9);
          transition: all 0.3s ease, color 0.3s ease;
        }
      }
    }
  }
}
